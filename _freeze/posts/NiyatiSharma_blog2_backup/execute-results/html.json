{
  "hash": "891d7c7c831d14bbc8b3d9def9908b7e",
  "result": {
    "markdown": "---\ntitle: \"Final Project Proposal\"\nauthor: \"Niyati Sharma\"\ndescription: Second proposal for my final project\ndate: \"11/20/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - finalpart1\n  - Niyati Sharma\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caret' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n:::\n\n```{.r .cell-code}\nlibrary(ROCR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ROCR' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(rpart.plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rpart.plot' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(rattle)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rattle' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: bitops\nRattle: A free graphical interface for data science with R.\nVersion 5.5.1 Copyright (c) 2006-2021 Togaware Pty Ltd.\nType 'rattle()' to shake, rattle, and roll your data.\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'plotly' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Introduction\n\nCredit risk is defined as the risk of loss resulting from the failure by a borrower to repay the principal and interest owed to the leader.So the purpose of credit analysis is to determine the creditworthiness of borrowers by measuring the risk of loss that the lender is exposed to.When calculating the credit risk of a particular borrower, lenders consider various factors like analyze different documents, such as the borrower’s income statement, balance sheet, credit reports, and other documents that reveal the financial situation of the borrower. to evaluate the characteristics of the borrower and conditions of the loan to estimate the probability of default and the subsequent risk of financial loss.\n\n## Research Question\n\nQ1. How credit risk depends on the age of the person?\nQ2. Does credit risk depends on occupation?\n\nThe purpose of this project is to take a data set of loan applications and build a predictive model for making a decision as to whether to approve a loan based on the applicant’s profile. \n\n## Hypothesis\n\nFor this research, the quantitative data was used. Based on probability techniques, this research has chosen to use random sampling method  based on documents and records of applicants for a German credit In this study dependent variables are divided in two groups. Good and bad legal customers; the aim of this study is to estimate the important independent variables. In this regard, good customer is a company which repays its loan plus the profit at the due date and in contrast, bad customer is a company which don’t repay at the due date. To differentiate between good and bad customers in our statistical analysis calculations, 0 is illustrating good customers and 1 is illustrating bad customers. \nH1: There is a significant and positive relationship between interest rate and credit risk.\nH2: There is a significant and positive relationship between age and credit risk.\nH3: There is a significant and positive relationship between history of legal customer relationship with the bank of repayment and credit risk.\n\n## Dataset\n\nThe data for the analysis is a set of 1000 German credit applications with 20 different attributes of the applicant. The original data is from the UCI Machine Learning Repository but the CSV version used in this analysis can be found from the Penn State University website (https://onlinecourses.science.psu.edu/stat857/node/215).\n\nThe following code can be used to determine if an applicant is credit worthy and if he (or she) represents a good credit risk to the lender. Several methods are applied to the data to help make this determination. We will look at them in this case.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\ncredit <- read_csv(\"_data/german_credit.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1000 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (21): Creditability, Account Balance, Duration of Credit (month), Paymen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstr(credit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [1,000 × 21] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Creditability                    : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Account Balance                  : num [1:1000] 1 1 2 1 1 1 1 1 4 2 ...\n $ Duration of Credit (month)       : num [1:1000] 18 9 12 12 12 10 8 6 18 24 ...\n $ Payment Status of Previous Credit: num [1:1000] 4 4 2 4 4 4 4 4 4 2 ...\n $ Purpose                          : num [1:1000] 2 0 9 0 0 0 0 0 3 3 ...\n $ Credit Amount                    : num [1:1000] 1049 2799 841 2122 2171 ...\n $ Value Savings/Stocks             : num [1:1000] 1 1 2 1 1 1 1 1 1 3 ...\n $ Length of current employment     : num [1:1000] 2 3 4 3 3 2 4 2 1 1 ...\n $ Instalment per cent              : num [1:1000] 4 2 2 3 4 1 1 2 4 1 ...\n $ Sex & Marital Status             : num [1:1000] 2 3 2 3 3 3 3 3 2 2 ...\n $ Guarantors                       : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Duration in Current address      : num [1:1000] 4 2 4 2 4 3 4 4 4 4 ...\n $ Most valuable available asset    : num [1:1000] 2 1 1 1 2 1 1 1 3 4 ...\n $ Age (years)                      : num [1:1000] 21 36 23 39 38 48 39 40 65 23 ...\n $ Concurrent Credits               : num [1:1000] 3 3 3 3 1 3 3 3 3 3 ...\n $ Type of apartment                : num [1:1000] 1 1 1 1 2 1 2 2 2 1 ...\n $ No of Credits at this Bank       : num [1:1000] 1 2 1 2 2 2 2 1 2 1 ...\n $ Occupation                       : num [1:1000] 3 3 2 2 2 2 2 2 1 1 ...\n $ No of dependents                 : num [1:1000] 1 2 1 2 1 2 1 2 1 1 ...\n $ Telephone                        : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Foreign Worker                   : num [1:1000] 1 1 1 2 2 2 2 2 1 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Creditability = col_double(),\n  ..   `Account Balance` = col_double(),\n  ..   `Duration of Credit (month)` = col_double(),\n  ..   `Payment Status of Previous Credit` = col_double(),\n  ..   Purpose = col_double(),\n  ..   `Credit Amount` = col_double(),\n  ..   `Value Savings/Stocks` = col_double(),\n  ..   `Length of current employment` = col_double(),\n  ..   `Instalment per cent` = col_double(),\n  ..   `Sex & Marital Status` = col_double(),\n  ..   Guarantors = col_double(),\n  ..   `Duration in Current address` = col_double(),\n  ..   `Most valuable available asset` = col_double(),\n  ..   `Age (years)` = col_double(),\n  ..   `Concurrent Credits` = col_double(),\n  ..   `Type of apartment` = col_double(),\n  ..   `No of Credits at this Bank` = col_double(),\n  ..   Occupation = col_double(),\n  ..   `No of dependents` = col_double(),\n  ..   Telephone = col_double(),\n  ..   `Foreign Worker` = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n# Data cleaning\n\nThere are columns which contain continuous variables rather than categorical data (duration of credit, credit amount and age). This is potentially important information in deciding credit risk and therefore one solution is to transform the data into categorical variables using the cut function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#handle spaces in column name\nCredit_new1 <- credit                # Duplicate data\n\ncolnames(Credit_new1) <- gsub(\" \", \".\", colnames(Credit_new1))\n # Rename variable names\ncolnames(Credit_new1)[colnames(Credit_new1)\n                   %in% c(\"Duration.of.Credit.(month)\",\"Value.Savings/Stocks\",\"Sex.&.Marital.Status\",\"Age.(years)\")] <- c(\"Duration.of.Credit.month\",\"Value.Savings.Stocks\",\"Sex.Marital.Status\", \"Age.years\")\nCredit_new1  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 21\n   Creditability Accou…¹ Durat…² Payme…³ Purpose Credi…⁴ Value…⁵ Lengt…⁶ Insta…⁷\n           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1             1       1      18       4       2    1049       1       2       4\n 2             1       1       9       4       0    2799       1       3       2\n 3             1       2      12       2       9     841       2       4       2\n 4             1       1      12       4       0    2122       1       3       3\n 5             1       1      12       4       0    2171       1       3       4\n 6             1       1      10       4       0    2241       1       2       1\n 7             1       1       8       4       0    3398       1       4       1\n 8             1       1       6       4       0    1361       1       2       2\n 9             1       4      18       4       3    1098       1       1       4\n10             1       2      24       2       3    3758       3       1       1\n# … with 990 more rows, 12 more variables: Sex.Marital.Status <dbl>,\n#   Guarantors <dbl>, Duration.in.Current.address <dbl>,\n#   Most.valuable.available.asset <dbl>, Age.years <dbl>,\n#   Concurrent.Credits <dbl>, Type.of.apartment <dbl>,\n#   No.of.Credits.at.this.Bank <dbl>, Occupation <dbl>, No.of.dependents <dbl>,\n#   Telephone <dbl>, Foreign.Worker <dbl>, and abbreviated variable names\n#   ¹​Account.Balance, ²​Duration.of.Credit.month, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCredit_new1$Duration.of.Credit.month <- cut(as.numeric(Credit_new1$Duration.of.Credit.month), c(0,12,18,24,Inf), labels = c(1:4))\nCredit_new1$Credit.Amount <- cut(as.numeric(Credit_new1$Credit.Amount), c(0,1000,5000,10000,Inf), labels = c(1:4))\nCredit_new1$Age.years <- cut(as.numeric(Credit_new1$Age.years), c(18,25,40,60,Inf), labels = c(1:4))\nhead(Credit_new1[,c(3,6,14)],5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  Duration.of.Credit.month Credit.Amount Age.years\n  <fct>                    <fct>         <fct>    \n1 2                        2             1        \n2 1                        2             2        \n3 1                        1             1        \n4 1                        2             2        \n5 1                        2             2        \n```\n:::\n:::\n\n\nFinally, the remaining columns can be converted to factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:21){\nCredit_new1[,i] <- as.factor(as.numeric(unlist(Credit_new1[,i])))}\nprint(Credit_new1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 21\n   Creditability Accou…¹ Durat…² Payme…³ Purpose Credi…⁴ Value…⁵ Lengt…⁶ Insta…⁷\n   <fct>         <fct>   <fct>   <fct>   <fct>   <fct>   <fct>   <fct>   <fct>  \n 1 1             1       2       4       2       2       1       2       4      \n 2 1             1       1       4       0       2       1       3       2      \n 3 1             2       1       2       9       1       2       4       2      \n 4 1             1       1       4       0       2       1       3       3      \n 5 1             1       1       4       0       2       1       3       4      \n 6 1             1       1       4       0       2       1       2       1      \n 7 1             1       1       4       0       2       1       4       1      \n 8 1             1       1       4       0       2       1       2       2      \n 9 1             4       2       4       3       2       1       1       4      \n10 1             2       3       2       3       2       3       1       1      \n# … with 990 more rows, 12 more variables: Sex.Marital.Status <fct>,\n#   Guarantors <fct>, Duration.in.Current.address <fct>,\n#   Most.valuable.available.asset <fct>, Age.years <fct>,\n#   Concurrent.Credits <fct>, Type.of.apartment <fct>,\n#   No.of.Credits.at.this.Bank <fct>, Occupation <fct>, No.of.dependents <fct>,\n#   Telephone <fct>, Foreign.Worker <fct>, and abbreviated variable names\n#   ¹​Account.Balance, ²​Duration.of.Credit.month, …\n```\n:::\n:::\n\n## Exploratory analysis\n\nBefore starting the modeling phase, it is important to explore the data to get an idea of any patterns or areas of interest.\n\nThe first thing is to examine how many examples of good and bad credit risk there are.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot1 <- ggplot(Credit_new1, aes(Creditability)) +\n        geom_bar(fill = \"pink\") +\n        theme(axis.title.x=element_blank()) + \n        theme(axis.title.y=element_blank()) +\n        geom_text(aes(label=..count..),stat='count',\n                  position=position_dodge(0.9),vjust=-0.2) +\n        scale_y_continuous(breaks=seq(0,700,100)) +\n        scale_x_discrete(labels = c(\"Bad\",\"Good\")) +\n        ggtitle(\"Count of Good and Bad Credit Risks\")\nPlot1\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe plot shows 300 examples of bad credit risk applicants versus 700 good. This is something that should be noted later when splitting the data set into training and test sets.\n\nThe next step is to explore some of the variables in the data. For example, it might be a fair assumption that amount of total savings is strongly linked to the credit risk of the applicant i.e. an applicant with little money in their account is a higher credit risk than one with a lot of savings? Another plot can be produced to confirm this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(Credit_new1$Value.Savings.Stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   [1] 1 1 2 1 1 1 1 1 1 3 1 2 1 2 5 3 1 3 1 1 1 1 1 1 5 1 1 1 5 1 1 1 1 3 1 1 1\n  [38] 1 5 1 5 1 1 5 5 1 1 2 2 2 1 1 1 5 5 1 1 1 5 5 3 1 5 1 1 2 1 1 1 1 4 5 3 5\n  [75] 5 5 1 4 1 5 1 5 2 3 5 4 1 1 4 5 2 5 1 1 1 4 1 1 1 1 4 1 5 1 1 1 1 1 1 5 1\n [112] 1 3 1 5 1 1 4 3 3 1 1 1 1 3 1 5 3 1 2 1 1 1 1 1 4 4 2 5 5 5 5 5 1 5 5 5 5\n [149] 1 1 4 1 5 2 3 1 1 1 1 1 1 4 1 1 1 1 1 1 1 1 1 1 1 1 1 3 2 2 1 3 1 1 5 1 1\n [186] 2 5 3 1 2 2 5 5 5 1 1 1 1 2 1 3 5 5 5 5 1 1 5 5 2 5 3 3 1 5 1 5 4 1 5 1 5\n [223] 1 4 4 4 2 1 4 2 1 1 2 1 1 1 1 1 1 3 3 1 2 3 3 2 1 2 2 5 5 1 1 1 4 1 1 1 1\n [260] 1 1 1 1 1 1 3 1 3 1 2 3 3 3 3 1 3 1 1 1 2 1 1 5 1 4 1 3 1 3 1 5 3 5 2 4 1\n [297] 2 2 4 1 1 1 1 5 1 2 1 5 1 5 5 5 4 1 1 5 1 1 1 2 3 2 4 5 1 4 2 1 5 1 5 1 1\n [334] 5 5 1 2 1 2 4 5 1 5 2 2 1 3 1 1 1 5 4 5 1 2 5 1 1 1 5 1 1 5 1 5 1 3 1 1 1\n [371] 1 4 4 1 2 1 1 1 2 5 1 1 5 1 3 1 1 1 1 5 1 3 1 1 2 1 1 1 1 1 1 2 3 1 1 5 1\n [408] 1 4 5 2 5 5 3 3 1 2 4 5 1 1 4 1 5 1 1 2 1 5 5 1 4 3 5 5 5 2 1 1 1 1 1 5 5\n [445] 1 1 5 5 1 3 3 5 1 1 1 5 1 4 5 5 5 1 2 1 5 5 5 3 1 1 1 5 5 5 1 1 1 5 1 1 5\n [482] 1 1 5 4 1 1 1 1 5 1 1 1 1 1 2 1 5 1 3 1 2 1 1 1 1 5 5 1 2 3 1 2 1 4 2 2 1\n [519] 5 1 1 1 1 5 1 1 1 1 1 1 1 5 1 1 1 1 1 1 5 1 1 5 1 1 1 1 5 5 4 3 1 1 1 5 4\n [556] 1 3 1 5 3 5 1 2 2 2 2 2 2 1 5 1 5 1 4 1 5 1 1 3 5 1 2 2 2 1 1 1 1 1 1 1 1\n [593] 1 1 1 1 1 1 1 1 1 1 5 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 1 5 1 1 1 1 1 5 4 5\n [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 5 2 2 5 5 5 5 5 5 2 1 1 1 1 1 1 1 1 1\n [667] 1 1 1 1 1 1 1 1 1 2 1 1 5 1 1 1 5 5 1 1 1 5 1 2 2 1 1 1 1 1 1 1 2 4 5 1 5\n [704] 4 5 3 5 5 1 1 1 1 5 5 1 1 1 4 5 2 1 1 1 5 1 1 3 1 5 5 1 5 4 1 1 3 1 4 1 2\n [741] 1 4 5 5 5 1 5 1 1 1 2 1 4 3 5 1 1 1 1 1 1 1 5 1 1 1 1 1 2 5 1 1 1 1 1 1 1\n [778] 1 1 2 1 1 1 4 1 3 2 4 1 1 1 1 1 1 1 1 1 1 5 1 5 5 5 5 5 1 2 1 1 1 1 1 1 1\n [815] 1 1 2 1 1 1 4 1 1 1 1 1 2 1 1 1 1 1 5 1 1 1 1 1 1 3 5 1 3 1 1 3 2 2 2 2 2\n [852] 1 1 5 1 1 3 1 1 2 5 1 1 1 1 5 1 1 2 1 1 1 1 1 1 1 1 1 1 5 1 1 1 2 2 2 1 1\n [889] 1 2 1 1 5 1 1 1 3 1 1 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [926] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 5 1 2 1 5 1 5 1 3 1 2 1 1 2 2 2 2 5 1\n [963] 1 1 1 1 1 1 1 5 1 1 1 1 1 1 1 1 5 1 1 1 1 1 1 1 1 2 1 1 1 1 5 1 1 1 1 5 5\n[1000] 5\nLevels: 1 2 3 4 5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1 <- ggplot(Credit_new1, aes(Value.Savings.Stocks, fill = Creditability),           stat=\"identity\") +\n        geom_bar() +\n        scale_fill_manual(values = c(\"blue\", \"orange\"),                    labels=c(\"Bad\",\"Good\")) +\n        theme(axis.title.x=element_blank()) +\n        theme(axis.title.y=element_blank()) +\n        scale_y_continuous(breaks=seq(0,700,100)) +\n        scale_x_discrete(labels = c(\"< 100 DM\", \"100-500 DM\", \"500-1000         DM\", \"> 1000 DM\", \"Unknown\")) +\n        theme(axis.text.x = element_text(angle = 45, hjust = 1, size =         10)) + \n        theme(axis.text.y = element_text(size = 10)) +\n        theme(legend.text=element_text(size=10)) +\n        theme(legend.title=element_text(size=12)) +\n        ggtitle(\"Good and Bad Credit Risks by Credit History\")\nplot1\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nThe plot seems to back up the rationale. A higher percentage of applicants with less savings are deemed as having bad credit risk.\n\nAnother area to explore is how credit risk relates to employment status. There are four statuses for employment in the data:\n\nUnemployed/ Unskilled (non-resident)\nUnskilled (resident)\nSkilled employee / Official\nManagement / Self-employed / Highly Qualified Employee / Officer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2 <- ggplot(Credit_new1, aes(Occupation, fill = Creditability), stat=\"identity\") +\n        geom_bar() +\n        scale_fill_manual(values = c(\"blue\", \"green\"), labels=c(\"Bad\",\"Good\")) +\n        theme(axis.title.x=element_blank()) +\n        theme(axis.title.y=element_blank()) +\n        scale_y_continuous(breaks=seq(0,700,100)) +\n        scale_x_discrete(labels = c(\"Unemployed\", \"Unskilled\", \"Skilled\", \"Management\")) +\n        theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) + \n        theme(axis.text.y = element_text(size = 10)) +\n        theme(legend.text=element_text(size=10)) +\n        theme(legend.title=element_text(size=12)) +\n        ggtitle(\"Good and Bad Credit Risks by Occupation\")\nplot2\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nThere appears to be less of a link with occupation. Most of the applicants come under ‘skilled employee’ but the credit ability of unskilled employees and management/highly qualified employees does not appear significantly different. However further statistical modeling is needed to support this initial analysis.\n\nFinally, some exploration can be performed on one of the new categorical variables created above. This example will look at age.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot3 <- ggplot(Credit_new1, aes(Age.years, fill = Creditability), stat=\"identity\") +\n        geom_bar() +\n        scale_fill_manual(values = c(\"pink\", \"green\"), labels=c(\"Bad\",\"Good\")) +\n        theme(axis.title.x=element_blank()) +\n        theme(axis.title.y=element_blank()) +\n        scale_y_continuous(breaks=seq(0,700,100)) +\n        scale_x_discrete(labels = c(\"18-25\", \"26-40\", \"41-60\", \"60+\")) +\n        theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) + \n        theme(axis.text.y = element_text(size = 10)) +\n        theme(legend.text=element_text(size=10)) +\n        theme(legend.title=element_text(size=12)) +\n        ggtitle(\"Good and Bad Credit Risks by Age\")\n\nplot3\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nThis analysis indicates perhaps some decrease in credit risk with age. However there is probably a lot of correlation between age and other factors such as savings and property so further statistical analysis is needed.\n\n## Statistical modeling\n\n# Logistic regression\nLogistic regression (aka logit regression or logit model)is a regression model where the response variable Y is categorical. Logistic regression allows us to estimate the probability of a categorical response based on one or more predictor variables (X). It allows one to say that the presence of a predictor increases (or decreases) the probability of a given outcome by a specific percentage. This tutorial covers the case when Y is binary — that is, where it can take only two values, “0” and “1”, which represent outcomes such as pass/fail, win/lose, alive/dead or healthy/sick. Cases where the dependent variable has more than two outcome categories may be analysed with multinomial logistic regression, or, if the multiple categories are ordered, in ordinal logistic regression. \n\nThe first step before applying models is to create training and test data sets. The data will be split 70/30 and spread evenly between good and bad credit risks using the CreateDataPartition function in the caret package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2800)\ninTraining <- createDataPartition(Credit_new1$Creditability, p=0.7, list=FALSE)\ntrain <- Credit_new1[inTraining,]\ntest <- Credit_new1[-inTraining,]\n```\n:::\n\n\nThe first model of logistic regression using the glm() function where we are predicting creditability with different variables of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2800)\nlmModel <- glm(Creditability ~ ., family = binomial, data = train)\n\n# Fit model to test set\nlmFit <- predict(lmModel, type = \"response\", test)\n\n# Compare predictions to test set\nlmPred <- prediction(lmFit, test$Creditability)\n\n# Create Area Under the Curve (AUC) plot\nAUC <- performance(lmPred, 'tpr', 'fpr')\nplot(AUC)\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nperformance(lmPred, measure = 'auc')@y.values[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8015344\n```\n:::\n:::\n\nThe second model of logistic regression using the glm() function where we are predicting creditability with age,occupation and value saving variables of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2800)\nlmModel <- glm(Creditability ~ Age.years + Occupation + Value.Savings.Stocks, family = binomial, data = train)\n\n# Fit model to test set\nlmFit <- predict(lmModel, type = \"response\", test)\n\n# Compare predictions to test set\nlmPred <- prediction(lmFit, test$Creditability)\n\n# Create Area Under the Curve (AUC) plot\nAUC <- performance(lmPred, 'tpr', 'fpr')\nplot(AUC)\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_backup_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nperformance(lmPred, measure = 'auc')@y.values[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.605291\n```\n:::\n:::\n\nOn comparing first model and second model based on AUC it shows\nModel one has a accuracy of 80 % while Model second has a accuracy of 61%. Based on these two models , We can conculde that Model one is the best model with predictor variables to predict the credit risk.\n\n## References\n\n1.Al-Tamimi, H. and Al-Mazrooei, M. (2007), “Banks’ risk management: a comparison study of UAE\nnational and foreign banks”, The Journal of Risk Finance, Vol. 8 No. 4, pp. 394-409.\n2.Angelini, E., di Tollo, G., & Roli, A. (2008). A neural network approach for credit risk evaluation. The\nQuarterly Review of Economics and Finance, 48(4), 733-755. http://dx.doi.org/10.1016/j.qref.2007.04.001.\n3.Beatty, A., and S. Liao. 2011. Do Delays in Expected Loss Recognition Affect Banks' Willingness to\nLend? Journal of Accounting & Economics 52 (1): 1-20. DOI: 10.1016/j.jacceco.2011.02.002\n4.Eletter, S. F., & Yaseen, S. G. (2010). Applying Neural Networks for Loan Decisions in the Jordanian\nCommercial Banking System. International Journal of Computer Science and Network Security, 10(1), 209-214.\n5.Hornik, K., Stinchcombe, M., & White, H. (1989). Multilayer feed forward networks are universal\napproximators. Neural Networks, 2(5), 359-366.http://dx.doi.org/10.1016/0893-6080(89)90020-8\n6.Ghodselahi, A., & Amirmadhi, A. (2011). Application of Artificial Intelligence Techniques for Credit Risk\nEvaluation. International Journal of Modeling and Optimization, 1(3), 243-249. http://dx.doi.org/10.7763/\nIJMO.2011.V1.43\n7.Gouvêa, M. A., & Gonçalves, E. B. (2007). Credit Risk Analysis Applying Logistic Regression, Neural\nNetworks and Genetic Algorithms Models. Paper presented at the Production and Operations Management\nSociety (POMS), Dallas, Texas, U.S.A.\n8.Hall, M. J. B., Muljawan, D., Suprayogi, & Moorena, L. (2009). Using the artificial neural network to\nassess bank credit risk: a case study of Indonesia. Applied Financial Economics, 19(22), 1825-1846.\nhttp://dx.doi.org/10.1080/09603100903018760\n9.Khashman, A. (2010). Neural networks for credit risk evaluation: Investigation of different neural\nmodels and learning schemes. Expert Syst. Appl., 37(9), 6233-6239. http://dx.doi.org/10.1016/\nj.eswa.2010.02.101\n10. Matoussi, H. & Abdelmoula, A. (2009). Using a Neural Network-Based Methodology for Credit–Risk\nEvaluation of a Tunisian Bank. Middle Eastern Finance and Economics, 4, 117-140\n",
    "supporting": [
      "NiyatiSharma_blog2_backup_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}