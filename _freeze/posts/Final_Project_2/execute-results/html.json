{
  "hash": "d64b5f4b195839f19c062de3cb6ade89",
  "result": {
    "markdown": "---\n\ntitle: \"Final_Project_2\"\nauthor: \"Mani Kanta Gogula\"\ndescription: \"Project Analysis\"\ndate: \"11/11/2022\"\nformat:\n  html:\n    df-print: paged\n    css: styles.css\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Project Analysis\n  - \n---\n\n\nIntroduction :\n\nHeart Disease in the United States\nHeart disease is the leading cause of death for men, women, and people of most racial and ethnic groups in the United States.1\nOne person dies every 34 seconds in the United States from cardiovascular disease.1\nAbout 697,000 people in the United States died from heart disease in 2020—that’s 1 in every 5 deaths.1,2\nHeart disease cost the United States about $229 billion each year from 2017 to 2018.3 This includes the cost of health care services, medicines, and lost productivity due to death.\n\n\nResearch :\n\n1. Examining the relationship between maximum heart rate one can achieve during excercise and likelihood of developing heart disease .\n\n2. Using Multiple logistic regression confounding effects of age and gender.\n\n Loading Packages and Dataset :\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.1.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nv ggplot2 3.3.5     v dplyr   1.0.8\nv tibble  3.1.6     v stringr 1.4.0\nv tidyr   1.2.0     v forcats 0.5.1\nv purrr   0.3.4     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nheart_cleveland_upload <- read_csv(\"posts/heart_cleveland_upload.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: 'posts/heart_cleveland_upload.csv' does not exist in current working directory ('C:/Users/manik/Desktop/DACSS 603/603_Fall_2022/posts').\n```\n:::\n\n```{.r .cell-code}\nhead(heart_cleveland_upload)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(heart_cleveland_upload): object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(heart_cleveland_upload)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n\nIn the respective Data set , We have 14 variables :\n\nAGE       : Age in years\nSEX       : Sex(1=MALE;O=FEMALE)\nCP        : chest Pain type\n         0:typical angina\n         1:atypical angina\n         2:non-anginal pain\n         3:asymptomatic\nTRESTBPS  :Resting blood pressure (in mm            Hg on admission to the       hospital)\n\nCHOL      :Serum cholestrol in mg/dl\nFBS       :Fasting blood sugar> 120mg/dl( 1=true ; 0=false)\nRESTECG   :Resting electrocardiographic results (0=Normal ;1=having ST-T Wave abnormality ; 2=Showing probable or definite left ventricular hypertrophy \nTHALACH   : Maximum heart acheived\nEXANG     :Excercise induced angina (1=Yes ; 0=No)\nOLDPEAK   :ST depression induced by excercise relative to rest\nSLOPE     :The slope of the peak excercise relative to rest\n          Value 0 :upsloping\n          Value 1 :Flat\n          Value 2 :Downsloping\nCA        :Number of major vessels (0-3) colored by fluroscopy\nCONDITION :0=no disease , 1= disease\n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(heart_cleveland_upload)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(heart_cleveland_upload)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(heart_cleveland_upload): object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n\n Recoding the sex variable into categorical variable where 0 as Female and 1 as Male \n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_cleveland_upload$sex[heart_cleveland_upload$sex == 0] <- \"female\"\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in heart_cleveland_upload$sex[heart_cleveland_upload$sex == 0] <- \"female\": object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nheart_cleveland_upload$sex[heart_cleveland_upload$sex == 1] <- \"male\"\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in heart_cleveland_upload$sex[heart_cleveland_upload$sex == 1] <- \"male\": object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nhead(heart_cleveland_upload)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(heart_cleveland_upload): object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\nCHI-SQUARED TEST:\n Chi-Square test in R is a statistical method which used to determine if a categorical variable have a significant correlation between them. The two variables are selected from the same population.\n\nParticularly in this test, we have to check the p-values. Moreover, like all statistical tests, we assume this test as a null hypothesis and an alternate hypothesis.\n\nThe main thing is, we reject the null hypothesis if the p-value that comes out in the result is less than a predetermined significance level, which is 0.05 usually, then we reject the null hypothesis.\n\nH0: The two variables are independent.\nH1: The two variables relate to each other.\n\nIn the case of a null hypothesis, a chi-square test is to test the two variables that are independent.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_sex<- chisq.test(heart_cleveland_upload$sex,heart_cleveland_upload$condition)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nprint(heart_sex)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(heart_sex): object 'heart_sex' not found\n```\n:::\n:::\n\n\n We have a high chi-squared value and a p-value of less than 0.05 significance level. So we reject the null hypothesis and conclude that sex and condition have a significant relationship.\n \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Does age have an effect? Age is continuous, so we use t-test here\nheart_age<-t.test(heart_cleveland_upload$age ~ heart_cleveland_upload$condition)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(predvars, data, env): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nprint(heart_age)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(heart_age): object 'heart_age' not found\n```\n:::\n:::\n\n\nHere’s how to interpret the results of the t-test:\n\ndata: This tells us the data that was used in the two sample t-test. In this case, we used the variables called age and condition.\n\nt: This is the t test-statistic. In this case, it is -4.0636.\n\ndf: This is the degrees of freedom associated with the t test-statistic. In this case, it’s 294.66\n\np-value: This is the p-value that corresponds to a t test-statistic of -4.0636 and df = 294.66. The p-value turns out to be 0.00006204. \n\nalternative hypothesis: This tells us the alternative hypothesis used for this particular t-test. In this case, the alternative hypothesis is that the true difference in means between the two groups is not equal to zero.\n\n95 percent confidence interval: This tells us the 95% confidence interval for the true difference in means between the two groups. It turns out to be [-6.108, -2.12].\n\nBecause the p-value of our test (0.00006204) is less than alpha = 0.05, we reject the null hypothesis of the test. This means we have sufficient evidence to say that the mean of group 0 and group 1 is different.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_thalach<-t.test(heart_cleveland_upload$thalach ~ heart_cleveland_upload$condition)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(predvars, data, env): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nprint(heart_thalach)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(heart_thalach): object 'heart_thalach' not found\n```\n:::\n:::\n\ndata: This tells us the data that was used in the two sample t-test. In this case, we used the variables called thalach and condition.\n\nt: This is the t test-statistic. In this case, it is 7.9286.\n\ndf: This is the degrees of freedom associated with the t test-statistic. In this case, it’s 266.44\n\np-value: This is the p-value that corresponds to a t test-statistic of 7.9286  and df = 266.44. The p-value turns out to be 0.00000000000006108. \n\nalternative hypothesis: This tells us the alternative hypothesis used for this particular t-test. In this case, the alternative hypothesis is that the true difference in means between the two groups is not equal to zero.\n\n95 percent confidence interval: This tells us the 95% confidence interval for the true difference in means between the two groups. It turns out to be [14.636, 24.30715].\n\nBecause the p-value of our test (0.0000000000000610) is less than alpha = 0.05, we reject the null hypothesis of the test. This means we have sufficient evidence to say that the mean of group 0 and group 1 is different.\n\n Exploring the association graphically\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Recode condition to be labelled\nheart_cleveland_upload %>% mutate(condition_labelled = ifelse(condition == 0, \"No disease\", \"Disease\")) ->heart_cleveland_upload\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., condition_labelled = ifelse(condition == 0, \"No disease\", : object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\n# age vs condition\nggplot(data = heart_cleveland_upload, aes(x = condition_labelled, y = age)) + geom_boxplot()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(data = heart_cleveland_upload, aes(x = condition_labelled, : object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# sex vs condition\nggplot(data = heart_cleveland_upload, aes(x = condition_labelled, fill = sex)) + geom_bar(position = \"fill\") + ylab(\"Sex %\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(data = heart_cleveland_upload, aes(x = condition_labelled, : object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\nLogistics Regression :\n\nLogistic regression is a predictive modelling algorithm that is used when the Y variable is binary categorical. That is, it can take only two values like 1 or 0. The goal is to determine a mathematical equation that can be used to predict the probability of event 1. Once the equation is established, it can be used to predict the Y when only the Xs are known.\n\n\n Logistic regression is a classic predictive modelling technique and still remains a popular choice for modelling binary categorical variables.\n\nAnother advantage of logistic regression is that it computes a prediction probability score of an event. More on that when you actually start building the models.\n\nBuilding the model and classifying the Y is only half work done. Actually, not even half. Because, the scope of evaluation metrics to judge the efficacy of the model is vast and requires careful judgement to choose the right model. In the next part, I will discuss various evaluation metrics that will help to understand how well the classification model performs from different perspectives.\n\nIn this Project , I have used two Models to compare various Metrics Like AUC, Accuracy and propse best model based on these metrics.\n\nModel 1 : Our goal in Model is to predict condition of the patient based on different input parameters.\n\nIn Model 1 , I have used age, sex and thalach as my input variables and predicted the condition of the patient.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using glm function from base R and specify the family argument as binomial\nmodel <- glm(data = heart_cleveland_upload, condition ~ age + sex + thalach, family = \"binomial\" )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\n# extract the model summary\nsummary(model)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(model): object 'model' not found\n```\n:::\n:::\n\n\nIn the output above, the first thing we see is the call, this is R reminding us what the model we ran was, what options we specified, etc.\n\nNext we see the deviance residuals, which are a measure of model fit. This part of output shows the distribution of the deviance residuals for individual cases used in the model. \n\nThe next part of the output shows the coefficients, their standard errors, the z-statistic (sometimes called a Wald z-statistic), and the associated p-values.. The logistic regression coefficients give the change in the log odds of the outcome for a one unit increase in the predictor variable.\n\nFor every one unit change in age, the log odds of likelihood of developing heart disease increases by 0.03.\nFor a one unit increase in sexmale, the log odds likelihood of developing heart disease increases by 1.46\n\nBelow the table of coefficients are fit indices, including the null and deviance residuals and the AIC. \n\nPrediction :\n\n\nLet's say a patient have a profile with age 45, sex =male and thalach 150. And we now predict the chances of that patient likelihood of developing heart disease based on our model 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the predicted probability in our dataset using the predict() function\n# We include the argument type=”response” in order to get our prediction.\npred_prob <- predict(model, heart_cleveland_upload, type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(model, heart_cleveland_upload, type = \"response\"): object 'model' not found\n```\n:::\n\n```{.r .cell-code}\n# create a decision rule using probability 0.5 as cutoff and save the predicted decision into the main data frame\nheart_cleveland_upload$pred_condition <- ifelse(pred_prob >= 0.5, 1, 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(pred_prob >= 0.5, 1, 0): object 'pred_prob' not found\n```\n:::\n\n```{.r .cell-code}\n# create a newdata data frame to save a new case information\nnewdata <- data.frame(age=45, sex='female', thalach=150)\n\n# predict probability for this new case and print out the predicted value\np_new <- predict(model, newdata, type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(model, newdata, type = \"response\"): object 'model' not found\n```\n:::\n\n```{.r .cell-code}\np_new\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'p_new' not found\n```\n:::\n:::\n\n\nWe see that this patient have 18% of chance developing heart disease.\n\nMETRICS :\n\nAre the predictions accurate? How well does the model fit our data? We are going to use some common metrics to evaluate the model performance. The most straightforward one is-\nAccuracy, which is the proportion of the total number of predictions that were correct. \nOn the other hand, we can calculate the classification error rate using 1- accuracy. However, accuracy can be misleading when the response is rare (i.e., imbalanced response). Another popular metric is\nArea Under the ROC curve (AUC), has the advantage that it's independent of the change in the proportion of responders. AUC ranges from 0 to 1. The closer it gets to 1 the better the model performance. Lastly, a confusion matrix is an N X N matrix, where N is the level of outcome. For the problem at hand, we have N=2, and hence we get a 2 X 2 matrix. It cross-tabulates the predicted outcome levels against the true outcome levels.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load Metrics package\nlibrary(Metrics)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'Metrics' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\n# calculate auc, accuracy, clasification error\nauc <- auc(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in auc(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\naccuracy <- accuracy(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(actual != predicted): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nclassification_error <- ce(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(actual != predicted): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\n# print out the metrics on to screen\nprint(paste(\"AUC=\", auc))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"AUC=\", auc): cannot coerce type 'closure' to vector of type 'character'\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Accuracy=\", accuracy))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"Accuracy=\", accuracy): cannot coerce type 'closure' to vector of type 'character'\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Classification Error=\", classification_error))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"Classification Error=\", classification_error): object 'classification_error' not found\n```\n:::\n\n```{.r .cell-code}\n# confusion matrix\ntable(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition, dnn=c(\"True Status\", \"Predicted Status\")) # confusion matrix\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition, : object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n\nAfter these metrics are calculated,  For a 45 years old female who has a max heart rate of 150, our model generated a heart disease probability of 0.18 indicating low risk of heart disease. Although our model has an overall accuracy of 0.71, there are cases that were misclassified as shown in the confusion matrix. One way to improve our current model is to include other relevant predictors from the dataset into our model.\n\nMODEL 2 : In Model 1 , I have used age, sex and chol as my input variables and predicted the condition of the patient.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2 <- glm(data = heart_cleveland_upload, condition ~ age + sex + chol, family = \"binomial\" )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(data): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\n# extract the model summary\nsummary(model_2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(model_2): object 'model_2' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the predicted probability in our dataset using the predict() function\n# We include the argument type=”response” in order to get our prediction.\npred_prob_2 <- predict(model_2, heart_cleveland_upload, type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(model_2, heart_cleveland_upload, type = \"response\"): object 'model_2' not found\n```\n:::\n\n```{.r .cell-code}\n# create a decision rule using probability 0.5 as cutoff and save the predicted decision into the main data frame\nheart_cleveland_upload$pred_condition_2 <- ifelse(pred_prob_2 >= 0.5, 1, 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ifelse(pred_prob_2 >= 0.5, 1, 0): object 'pred_prob_2' not found\n```\n:::\n\n```{.r .cell-code}\n# create a newdata data frame to save a new case information\nnewdata_2 <- data.frame(age=45, sex='female', chol=150)\n\n# predict probability for this new case and print out the predicted value\np_new_2 <- predict(model_2, newdata_2, type=\"response\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in predict(model_2, newdata_2, type = \"response\"): object 'model_2' not found\n```\n:::\n\n```{.r .cell-code}\np_new_2\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'p_new_2' not found\n```\n:::\n:::\n\n\nWe see that this patient have 8.6% of chance developing heart disease. i.e indicating low risk of heart disease.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load Metrics package\nlibrary(Metrics)\n\n# calculate auc, accuracy, clasification error\nauc <- auc(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in auc(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\naccuracy <- accuracy(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(actual != predicted): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\nclassification_error <- ce(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(actual != predicted): object 'heart_cleveland_upload' not found\n```\n:::\n\n```{.r .cell-code}\n# print out the metrics on to screen\nprint(paste(\"AUC=\", auc))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"AUC=\", auc): cannot coerce type 'closure' to vector of type 'character'\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Accuracy=\", accuracy))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"Accuracy=\", accuracy): cannot coerce type 'closure' to vector of type 'character'\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Classification Error=\", classification_error))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in paste(\"Classification Error=\", classification_error): object 'classification_error' not found\n```\n:::\n\n```{.r .cell-code}\n# confusion matrix\ntable(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2, dnn=c(\"True Status\", \"Predicted Status\")) # confusion matrix\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(heart_cleveland_upload$condition, heart_cleveland_upload$pred_condition_2, : object 'heart_cleveland_upload' not found\n```\n:::\n:::\n\n\nWhen we compare our Model 1 and Model 2 based on metrics - AUC, Accuray . \n\nModel 1 has a accuracy of 71 % and Model 2 has a acuuracy of 67 %. Based on these two models , We can conculde that Model 1 is the best model with predictor variables age , sex and thalach to predict likelihood of developing heart disease.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}