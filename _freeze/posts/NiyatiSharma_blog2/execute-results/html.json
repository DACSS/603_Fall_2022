{
  "hash": "9450d870ee362f4f3446d5d4ec819771",
  "result": {
    "markdown": "---\ntitle: \"Final Project Proposal\"\nauthor: \"Niyati Sharma\"\ndescription: Second proposal for my final project\ndate: \"11/11/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - finalpart1\n  - Niyati Sharma\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'caret' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n:::\n\n```{.r .cell-code}\nlibrary(ROCR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ROCR' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(rpart.plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rpart.plot' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(rattle)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rattle' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: bitops\nRattle: A free graphical interface for data science with R.\nVersion 5.5.1 Copyright (c) 2006-2021 Togaware Pty Ltd.\nType 'rattle()' to shake, rattle, and roll your data.\n```\n:::\n\n```{.r .cell-code}\nlibrary(randomForest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'randomForest' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nrandomForest 4.7-1.1\nType rfNews() to see new features/changes/bug fixes.\n\nAttaching package: 'randomForest'\n\nThe following object is masked from 'package:rattle':\n\n    importance\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Introduction\n\nCredit risk is defined as the risk of loss resulting from the failure by a borrower to repay the principal and interest owed to the leader.So the purpose of credit analysis is to determine the creditworthiness of borrowers by measuring the risk of loss that the lender is exposed to.When calculating the credit risk of a particular borrower, lenders consider various factors like analyze different documents, such as the borrower’s income statement, balance sheet, credit reports, and other documents that reveal the financial situation of the borrower. to evaluate the characteristics of the borrower and conditions of the loan to estimate the probability of default and the subsequent risk of financial loss.\n\n## Research Question\n\nQ1. How credit risk depends on the age of the person?\nQ2. Does credit risk depends on occupation?\n\nThe purpose of this project is to take a data set of loan applications and build a predictive model for making a decision as to whether to approve a loan based on the applicant’s profile. \n\n## Hypothesis\n\nAccording to research credit risk of a particular borrower, lenders consider various factors include the borrower’s capacity to repay are income, character, house ownership, and credit history.\nCheck the relationship between the age, income with credit risk with new dataset.\nFor this research, the quantitative data was used. Based on probability techniques, this research has chosen to use random sampling method over the period 2000-2013, based on documents and records of applicants for an Iranian commercial bank. Sample estimation has been done by a pretest sample size of 90 cases and according to the sample size formula, which are derived from legal customers’ profiles. In this study dependent variables are divided in two groups. Good and bad legal customers; the aim of this study is to estimate the important independent variables. In this regard, good customer is a company which repays its loan plus the profit at the due date and in contrast, bad customer is a company which don’t repay at the due date. To differentiate between good and bad customers in our statistical analysis calculations, 0 is illustrating good customers and 1 is illustrating bad customers. Five hypotheses are defined as follows:\nH1: There is a significant and positive relationship between interest rate and credit risk.\nH2: There is a significant and positive relationship between due date of repayment and credit risk.\nH3: There is a significant and positive relationship between history of legal customer relationship with\nthe bank of repayment and credit risk.\nH4: There is a significant and positive relationship between delay Time of maturity and credit risk.\nH5: There is a significant and positive relationship between customer in industrial sectors and credit\nrisk.\n\n## Dataset\n\nThe data for the analysis is a set of 1000 German credit applications with 20 different attributes of the applicant. The original data is from the UCI Machine Learning Repository but the CSV version used in this analysis can be found from the Penn State University website (https://onlinecourses.science.psu.edu/stat857/node/215).\n\nThe following code can be used to determine if an applicant is credit worthy and if he (or she) represents a good credit risk to the lender. Several methods are applied to the data to help make this determination. We will look at them in this case.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\ncredit <- read_csv(\"_data/german_credit.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1000 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (21): Creditability, Account Balance, Duration of Credit (month), Paymen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstr(credit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [1,000 × 21] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Creditability                    : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Account Balance                  : num [1:1000] 1 1 2 1 1 1 1 1 4 2 ...\n $ Duration of Credit (month)       : num [1:1000] 18 9 12 12 12 10 8 6 18 24 ...\n $ Payment Status of Previous Credit: num [1:1000] 4 4 2 4 4 4 4 4 4 2 ...\n $ Purpose                          : num [1:1000] 2 0 9 0 0 0 0 0 3 3 ...\n $ Credit Amount                    : num [1:1000] 1049 2799 841 2122 2171 ...\n $ Value Savings/Stocks             : num [1:1000] 1 1 2 1 1 1 1 1 1 3 ...\n $ Length of current employment     : num [1:1000] 2 3 4 3 3 2 4 2 1 1 ...\n $ Instalment per cent              : num [1:1000] 4 2 2 3 4 1 1 2 4 1 ...\n $ Sex & Marital Status             : num [1:1000] 2 3 2 3 3 3 3 3 2 2 ...\n $ Guarantors                       : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Duration in Current address      : num [1:1000] 4 2 4 2 4 3 4 4 4 4 ...\n $ Most valuable available asset    : num [1:1000] 2 1 1 1 2 1 1 1 3 4 ...\n $ Age (years)                      : num [1:1000] 21 36 23 39 38 48 39 40 65 23 ...\n $ Concurrent Credits               : num [1:1000] 3 3 3 3 1 3 3 3 3 3 ...\n $ Type of apartment                : num [1:1000] 1 1 1 1 2 1 2 2 2 1 ...\n $ No of Credits at this Bank       : num [1:1000] 1 2 1 2 2 2 2 1 2 1 ...\n $ Occupation                       : num [1:1000] 3 3 2 2 2 2 2 2 1 1 ...\n $ No of dependents                 : num [1:1000] 1 2 1 2 1 2 1 2 1 1 ...\n $ Telephone                        : num [1:1000] 1 1 1 1 1 1 1 1 1 1 ...\n $ Foreign Worker                   : num [1:1000] 1 1 1 2 2 2 2 2 1 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Creditability = col_double(),\n  ..   `Account Balance` = col_double(),\n  ..   `Duration of Credit (month)` = col_double(),\n  ..   `Payment Status of Previous Credit` = col_double(),\n  ..   Purpose = col_double(),\n  ..   `Credit Amount` = col_double(),\n  ..   `Value Savings/Stocks` = col_double(),\n  ..   `Length of current employment` = col_double(),\n  ..   `Instalment per cent` = col_double(),\n  ..   `Sex & Marital Status` = col_double(),\n  ..   Guarantors = col_double(),\n  ..   `Duration in Current address` = col_double(),\n  ..   `Most valuable available asset` = col_double(),\n  ..   `Age (years)` = col_double(),\n  ..   `Concurrent Credits` = col_double(),\n  ..   `Type of apartment` = col_double(),\n  ..   `No of Credits at this Bank` = col_double(),\n  ..   Occupation = col_double(),\n  ..   `No of dependents` = col_double(),\n  ..   Telephone = col_double(),\n  ..   `Foreign Worker` = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n# Attribute Description\n\n \nMore information about the attribute information and what the numeric values mean can be found at the UCI link above. One thing to note immediately is that three of the columns contain continuous variables rather than categorical data (duration of credit, credit amount and age). This is potentially important information in deciding credit risk and therefore one solution is to transform the data into categorical variables using the cut function.\n\n::: {.cell}\n\n```{.r .cell-code}\n#handle spaces in column name\nCredit_new1 <- credit                  # Duplicate data\n\ncolnames(Credit_new1) <- gsub(\" \", \".\", colnames(Credit_new1))\n\ncolnames(Credit_new1)[colnames(Credit_new1)      # Rename two variable names\n                   %in% c(\"Duration.of.Credit.(month)\", \"Age.(years)\")] <- c(\"Duration.of.Credit..month\", \"Age.years\")\n\nCredit_new1        \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 21\n   Creditability Accou…¹ Durat…² Payme…³ Purpose Credi…⁴ Value…⁵ Lengt…⁶ Insta…⁷\n           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1             1       1      18       4       2    1049       1       2       4\n 2             1       1       9       4       0    2799       1       3       2\n 3             1       2      12       2       9     841       2       4       2\n 4             1       1      12       4       0    2122       1       3       3\n 5             1       1      12       4       0    2171       1       3       4\n 6             1       1      10       4       0    2241       1       2       1\n 7             1       1       8       4       0    3398       1       4       1\n 8             1       1       6       4       0    1361       1       2       2\n 9             1       4      18       4       3    1098       1       1       4\n10             1       2      24       2       3    3758       3       1       1\n# … with 990 more rows, 12 more variables: `Sex.&.Marital.Status` <dbl>,\n#   Guarantors <dbl>, Duration.in.Current.address <dbl>,\n#   Most.valuable.available.asset <dbl>, Age.years <dbl>,\n#   Concurrent.Credits <dbl>, Type.of.apartment <dbl>,\n#   No.of.Credits.at.this.Bank <dbl>, Occupation <dbl>, No.of.dependents <dbl>,\n#   Telephone <dbl>, Foreign.Worker <dbl>, and abbreviated variable names\n#   ¹​Account.Balance, ²​Duration.of.Credit..month, …\n```\n:::\n\n```{.r .cell-code}\n# Print updated data\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCredit_new1 <- Credit_new1 %>%\n  mutate(p1 = case_when((Duration.of.Credit..month >= 0 & Duration.of.Credit..month <= 12) ~ 1, \n                        (Duration.of.Credit..month >= 13 & Duration.of.Credit..month <= 18) ~ 2, \n                        (Duration.of.Credit..month >= 19 & Duration.of.Credit..month <= 24) ~ 3, \n                        Duration.of.Credit..month > 24 ~ 4))\nCredit_new1 %>%\n  select(Duration.of.Credit..month,p1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 2\n   Duration.of.Credit..month    p1\n                       <dbl> <dbl>\n 1                        18     2\n 2                         9     1\n 3                        12     1\n 4                        12     1\n 5                        12     1\n 6                        10     1\n 7                         8     1\n 8                         6     1\n 9                        18     2\n10                        24     3\n# … with 990 more rows\n```\n:::\n:::\n\n\n0 - 1,000 DM\n1,001 - 5,000 DM\n5,001 - 10,000 DM\nOver 10,000 DM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCredit_new1 <- Credit_new1 %>%\n  mutate(p2 = case_when((Credit.Amount \n                         >= 0 & Credit.Amount <= 1000) ~ 1, \n                        (Credit.Amount\n                         >= 1001 & Credit.Amount <= 5000) ~ 2, \n                        (Credit.Amount\n                         >= 5001 & Credit.Amount <= 10000) ~ 3, \n                        Credit.Amount > 10000 ~ 4))\nCredit_new1 %>%\n  select(Credit.Amount,p2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 2\n   Credit.Amount    p2\n           <dbl> <dbl>\n 1          1049     2\n 2          2799     2\n 3           841     1\n 4          2122     2\n 5          2171     2\n 6          2241     2\n 7          3398     2\n 8          1361     2\n 9          1098     2\n10          3758     2\n# … with 990 more rows\n```\n:::\n:::\n\n18 - 25\n26 - 40\n41 - 60\nOver 60\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCredit_new1 <- Credit_new1 %>%\n  mutate(p3 = case_when((Age.years \n                         >= 18 & Age.years <= 25) ~ 1, \n                        (Age.years\n                         >= 26 & Age.years <= 40) ~ 2, \n                        (Age.years\n                         >= 41 & Age.years <= 60) ~ 3, \n                        Age.years > 60 ~ 4))\nCredit_new1 %>%\n  select(Age.years,p3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 2\n   Age.years    p3\n       <dbl> <dbl>\n 1        21     1\n 2        36     2\n 3        23     1\n 4        39     2\n 5        38     2\n 6        48     3\n 7        39     2\n 8        40     2\n 9        65     4\n10        23     1\n# … with 990 more rows\n```\n:::\n:::\n\nFinally, the remaining columns can be converted to factors.\n\n::: {.cell}\n\n```{.r .cell-code}\n#print(Credit_new1)\n#for(i in 1:21) Credit_new1[, i] <- as.factor(Credit_new1[, i])\n#for(i in 1:21) {print(Credit_new1[, i])}\ncredit_temp<-Credit_new1[1:21]\nprint(credit_temp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,000 × 21\n   Creditability Accou…¹ Durat…² Payme…³ Purpose Credi…⁴ Value…⁵ Lengt…⁶ Insta…⁷\n           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1             1       1      18       4       2    1049       1       2       4\n 2             1       1       9       4       0    2799       1       3       2\n 3             1       2      12       2       9     841       2       4       2\n 4             1       1      12       4       0    2122       1       3       3\n 5             1       1      12       4       0    2171       1       3       4\n 6             1       1      10       4       0    2241       1       2       1\n 7             1       1       8       4       0    3398       1       4       1\n 8             1       1       6       4       0    1361       1       2       2\n 9             1       4      18       4       3    1098       1       1       4\n10             1       2      24       2       3    3758       3       1       1\n# … with 990 more rows, 12 more variables: `Sex.&.Marital.Status` <dbl>,\n#   Guarantors <dbl>, Duration.in.Current.address <dbl>,\n#   Most.valuable.available.asset <dbl>, Age.years <dbl>,\n#   Concurrent.Credits <dbl>, Type.of.apartment <dbl>,\n#   No.of.Credits.at.this.Bank <dbl>, Occupation <dbl>, No.of.dependents <dbl>,\n#   Telephone <dbl>, Foreign.Worker <dbl>, and abbreviated variable names\n#   ¹​Account.Balance, ²​Duration.of.Credit..month, …\n```\n:::\n\n```{.r .cell-code}\ncredit_temp$Duration.of.Credit..month <- cut(as.numeric(credit_temp$Duration.of.Credit..month), c(0,12,18,24,Inf), labels = c(1:4))\ncredit_temp$Credit.Amount <- cut(as.numeric(credit_temp$Credit.Amount), c(0,1000,5000,10000,Inf), labels = c(1:4))\ncredit_temp$Age.years <- cut(as.numeric(credit_temp$Age.years), c(18,25,40,60,Inf), labels = c(1:4))\nhead(credit_temp[,c(3,6,14)],5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  Duration.of.Credit..month Credit.Amount Age.years\n  <fct>                     <fct>         <fct>    \n1 2                         2             1        \n2 1                         2             2        \n3 1                         1             1        \n4 1                         2             2        \n5 1                         2             2        \n```\n:::\n:::\n\n## Exploratory analysis\nBefore starting the modeling phase, it is important to explore the data to get an idea of any patterns or areas of interest.\n\nThe first thing is to examine how many examples of good and bad credit risk there are.\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(Credit_new1$Creditability)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [38] 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0\n [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [149] 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1\n [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [223] 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [297] 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [371] 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1\n [445] 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n [519] 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1\n [556] 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1\n [593] 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n [630] 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1\n [667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1\n [704] 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [741] 1 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [778] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [815] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [852] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [889] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [926] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [963] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[1000] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggplot(Credit_new1, aes(Creditability)) +\n        geom_bar(fill = \"#4EB25A\") +\n        theme(axis.title.x=element_blank()) + \n        theme(axis.title.y=element_blank()) +\n  #      geom_text(aes(label =c(\"Bad\", \"Good\"))) +\n        scale_y_continuous(breaks=seq(0,700,100)) +\n        scale_x_discrete(labels = c(\"Bad\",\"Good\")) +\n        ggtitle(\"Count of Good and Bad Credit Risks\")\ng\n```\n\n::: {.cell-output-display}\n![](NiyatiSharma_blog2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n## References\n\n1.Al-Tamimi, H. and Al-Mazrooei, M. (2007), “Banks’ risk management: a comparison study of UAE\nnational and foreign banks”, The Journal of Risk Finance, Vol. 8 No. 4, pp. 394-409.\n2.Angelini, E., di Tollo, G., & Roli, A. (2008). A neural network approach for credit risk evaluation. The\nQuarterly Review of Economics and Finance, 48(4), 733-755. http://dx.doi.org/10.1016/j.qref.2007.04.001.\n3.Beatty, A., and S. Liao. 2011. Do Delays in Expected Loss Recognition Affect Banks' Willingness to\nLend? Journal of Accounting & Economics 52 (1): 1-20. DOI: 10.1016/j.jacceco.2011.02.002\n4.Eletter, S. F., & Yaseen, S. G. (2010). Applying Neural Networks for Loan Decisions in the Jordanian\nCommercial Banking System. International Journal of Computer Science and Network Security, 10(1), 209-214.\n5.Hornik, K., Stinchcombe, M., & White, H. (1989). Multilayer feed forward networks are universal\napproximators. Neural Networks, 2(5), 359-366.http://dx.doi.org/10.1016/0893-6080(89)90020-8\n6.Ghodselahi, A., & Amirmadhi, A. (2011). Application of Artificial Intelligence Techniques for Credit Risk\nEvaluation. International Journal of Modeling and Optimization, 1(3), 243-249. http://dx.doi.org/10.7763/\nIJMO.2011.V1.43\n7.Gouvêa, M. A., & Gonçalves, E. B. (2007). Credit Risk Analysis Applying Logistic Regression, Neural\nNetworks and Genetic Algorithms Models. Paper presented at the Production and Operations Management\nSociety (POMS), Dallas, Texas, U.S.A.\n8.Hall, M. J. B., Muljawan, D., Suprayogi, & Moorena, L. (2009). Using the artificial neural network to\nassess bank credit risk: a case study of Indonesia. Applied Financial Economics, 19(22), 1825-1846.\nhttp://dx.doi.org/10.1080/09603100903018760\n9.Khashman, A. (2010). Neural networks for credit risk evaluation: Investigation of different neural\nmodels and learning schemes. Expert Syst. Appl., 37(9), 6233-6239. http://dx.doi.org/10.1016/\nj.eswa.2010.02.101\n10. Matoussi, H. & Abdelmoula, A. (2009). Using a Neural Network-Based Methodology for Credit–Risk\nEvaluation of a Tunisian Bank. Middle Eastern Finance and Economics, 4, 117-140\n",
    "supporting": [
      "NiyatiSharma_blog2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}